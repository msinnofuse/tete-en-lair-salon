---
import { getTranslations, type Language } from '../i18n/utils';

export interface Props {
  currentLang?: Language;
}

const { currentLang = 'de' } = Astro.props;
const t = getTranslations(currentLang);
---

<nav class="fixed top-0 left-0 right-0 z-50 nav-modern">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo/Brand -->
      <div class="flex-shrink-0">
        <h1 class="text-2xl font-brand line-accent">
          tÃªte en l'air
        </h1>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-8">
          <a href="#home" class="nav-link font-nav px-3 py-2 transition-all" style="color: var(--text-muted); hover:color: var(--navy-blue);" data-key="home">
            {t.nav.home}
          </a>
          <a href="#salon" class="nav-link font-nav px-3 py-2 transition-all" style="color: var(--text-muted); hover:color: var(--navy-blue);" data-key="salon">
            {t.nav.salon}
          </a>
          <a href="#pricing" class="nav-link font-nav px-3 py-2 transition-all" style="color: var(--text-muted); hover:color: var(--navy-blue);" data-key="pricing">
            {t.nav.pricing}
          </a>
          <a href="#contact" class="nav-link font-nav px-3 py-2 transition-all" style="color: var(--text-muted); hover:color: var(--navy-blue);" data-key="contact">
            {t.nav.contact}
          </a>
        </div>
      </div>

      <!-- Language Switcher & Mobile Menu Button -->
      <div class="flex items-center space-x-4">
        <!-- Language Switcher -->
        <div class="language-switcher flex items-center space-x-2">
          <button 
            class={`lang-btn px-3 py-1 text-xs font-nav transition-all rounded cursor-pointer ${currentLang === 'de' ? '' : 'hover:text-navy-blue'}`}
            style={currentLang === 'de' ? 'background: var(--navy-blue); color: var(--cream-white);' : 'color: var(--text-muted); background: transparent;'}
            data-lang="de"
          >
            DE
          </button>
          <span style="color: var(--powder-blue);">|</span>
          <button 
            class={`lang-btn px-3 py-1 text-xs font-nav transition-all rounded cursor-pointer ${currentLang === 'en' ? '' : 'hover:text-navy-blue'}`}
            style={currentLang === 'en' ? 'background: var(--navy-blue); color: var(--cream-white);' : 'color: var(--text-muted); background: transparent;'}
            data-lang="en"
          >
            EN
          </button>
        </div>

        <!-- Mobile Menu Button -->
        <div class="md:hidden">
          <button 
            id="mobile-menu-btn" 
            type="button" 
            class="inline-flex items-center justify-center p-2 transition-all focus:outline-none"
            style="color: var(--text-primary); hover:color: var(--navy-blue);"
            aria-controls="mobile-menu" 
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <!-- Hamburger Icon -->
            <svg class="hamburger-icon block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
            </svg>
            <!-- Close Icon -->
            <svg class="close-icon hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="md:hidden hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t" style="background: var(--cream-white); border-color: var(--powder-blue);">
      <a href="#home" class="mobile-nav-link nav-link font-nav block px-3 py-3 transition-all rounded" style="color: var(--text-primary); hover:background: var(--light-powder);" data-key="home">
        {t.nav.home}
      </a>
      <a href="#salon" class="mobile-nav-link nav-link font-nav block px-3 py-3 transition-all rounded" style="color: var(--text-primary); hover:background: var(--light-powder);" data-key="salon">
        {t.nav.salon}
      </a>
      <a href="#pricing" class="mobile-nav-link nav-link font-nav block px-3 py-3 transition-all rounded" style="color: var(--text-primary); hover:background: var(--light-powder);" data-key="pricing">
        {t.nav.pricing}
      </a>
      <a href="#contact" class="mobile-nav-link nav-link font-nav block px-3 py-3 transition-all rounded" style="color: var(--text-primary); hover:background: var(--light-powder);" data-key="contact">
        {t.nav.contact}
      </a>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerIcon = mobileMenuBtn?.querySelector('.hamburger-icon');
  const closeIcon = mobileMenuBtn?.querySelector('.close-icon');

  mobileMenuBtn?.addEventListener('click', () => {
    const isExpanded = mobileMenuBtn.getAttribute('aria-expanded') === 'true';
    
    mobileMenuBtn.setAttribute('aria-expanded', (!isExpanded).toString());
    mobileMenu?.classList.toggle('hidden');
    hamburgerIcon?.classList.toggle('hidden');
    hamburgerIcon?.classList.toggle('block');
    closeIcon?.classList.toggle('hidden');
    closeIcon?.classList.toggle('block');
  });

  // Close mobile menu when clicking on nav links
  const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      mobileMenuBtn?.setAttribute('aria-expanded', 'false');
      hamburgerIcon?.classList.add('block');
      hamburgerIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      closeIcon?.classList.remove('block');
    });
  });

  // Language switching functionality
  const langButtons = document.querySelectorAll('.lang-btn');
  
  langButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const selectedLang = btn.getAttribute('data-lang');
      
      // Navigate to the appropriate page
      if (selectedLang === 'en') {
        window.location.href = '/tete-en-lair-salon/en';
      } else {
        window.location.href = '/tete-en-lair-salon/';
      }
    });
  });
</script>