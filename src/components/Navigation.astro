---
import { getTranslations, type Language } from '../i18n/utils';

export interface Props {
  currentLang?: Language;
}

const { currentLang = 'de' } = Astro.props;
const t = getTranslations(currentLang);

// Get current page for active menu item
const currentPath = Astro.url.pathname;
const isSalonPage = currentPath.includes('/salon');
const isAboutPage = currentPath.includes('/about');
const isPricingPage = currentPath.includes('/pricing');
const isContactPage = currentPath.includes('/contact');
const isBlackNavPage = isAboutPage || isPricingPage || isContactPage;
const isAboutOnlyPage = isAboutPage && !isSalonPage;
const isPricingOnlyPage = isPricingPage && !isSalonPage && !isAboutPage;

const getActiveClass = (path: string, isMobile: boolean = false) => {
  // Normalize paths for comparison (remove trailing slashes)
  const normalizedCurrentPath = currentPath.replace(/\/$/, '') || '/';
  const normalizedPath = path.replace(/\/$/, '') || '/';

  const isActive = normalizedCurrentPath === normalizedPath;
  if (!isActive) return '';

  // Use black border for salon/about pages, white for others
  if (isBlackNavPage) {
    return 'border-b-2 border-black';
  }
  return isMobile ? 'border-b-2 border-black' : 'border-b-2 border-white';
};
---

<nav class="fixed top-0 left-0 right-0 z-50 nav-modern nav-scrollable" id="main-nav">
  <div class="w-full relative">
    <!-- Desktop Layout (1400px+) -->
    <div class="hidden xl-1400:flex items-center h-24 pt-8">
      <!-- Desktop Navigation - Left Side -->
      <div class="absolute left-16 top-8 h-16 flex items-center">
        <div class="flex items-baseline space-x-4">
          <a href={currentLang === 'en' ? '/tete-en-lair-salon/en' : '/tete-en-lair-salon/'} class={`nav-link font-nav px-3 py-2 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en' : '/tete-en-lair-salon/')}`} style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"} data-key="home">
            {t.nav.home}
          </a>
          <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/salon' : '/tete-en-lair-salon/salon'} class={`nav-link font-nav px-3 py-2 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/salon' : '/tete-en-lair-salon/salon')}`} style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"} data-key="salon">
            {t.nav.salon}
          </a>
          <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/about' : '/tete-en-lair-salon/about'} class={`nav-link font-nav px-3 py-2 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/about' : '/tete-en-lair-salon/about')}`} style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"} data-key="about">
            {t.nav.about}
          </a>
          <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/pricing' : '/tete-en-lair-salon/pricing'} class={`nav-link font-nav px-3 py-2 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/pricing' : '/tete-en-lair-salon/pricing')}`} style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"} data-key="pricing">
            {t.nav.pricing}
          </a>
          <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/contact' : '/tete-en-lair-salon/contact'} class={`nav-link font-nav px-3 py-2 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/contact' : '/tete-en-lair-salon/contact')}`} style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"} data-key="contact">
            {t.nav.contact}
          </a>
        </div>
      </div>

      <!-- Logo/Brand - Absolutely Centered -->
      <div class="w-full flex justify-center">
        <h1 class="text-4xl font-brand line-accent nav-title" style={isBlackNavPage ? "color: black;" : "color: white;"}>
          TÊTE EN L'AIR
        </h1>
      </div>

      <!-- Desktop Language Switcher - Right Side -->
      <div class="absolute right-16 top-8 h-16 flex items-center space-x-4">
        <div class="language-switcher flex items-center space-x-3">
          <button
            class={`lang-btn font-nav transition-all cursor-pointer ${currentLang === 'de' ? (isBlackNavPage ? 'border-b border-black font-medium' : 'border-b border-white font-medium') : 'opacity-70 hover:opacity-100'}`}
            style={isBlackNavPage ? "color: black; background: none; border: none; padding: 0; font-size: 16px;" : "color: white; background: none; border: none; padding: 0; font-size: 16px;"}
            data-lang="de"
          >
            DE
          </button>
          <span style={isBlackNavPage ? "color: black; opacity: 0.5; font-size: 12px;" : "color: white; opacity: 0.5; font-size: 12px;"}>|</span>
          <button
            class={`lang-btn font-nav transition-all cursor-pointer ${currentLang === 'en' ? (isBlackNavPage ? 'border-b border-black font-medium' : 'border-b border-white font-medium') : 'opacity-70 hover:opacity-100'}`}
            style={isBlackNavPage ? "color: black; background: none; border: none; padding: 0; font-size: 16px;" : "color: white; background: none; border: none; padding: 0; font-size: 16px;"}
            data-lang="en"
          >
            EN
          </button>
        </div>
      </div>
    </div>

    <!-- Hamburger Menu Layout (below 1400px) -->
    <div class="xl-1400:hidden flex justify-between items-center h-20 px-8 pt-6">
      <div class="w-8"></div> <!-- Spacer -->
      <h1 class="text-2xl font-brand line-accent nav-title" style={isBlackNavPage ? "color: black;" : "color: white;"}>
        TÊTE EN L'AIR
      </h1>
      <button
        id="mobile-menu-btn"
        type="button"
        class="inline-flex items-center justify-center p-2 transition-all focus:outline-none"
        style={isBlackNavPage ? "color: black; hover:color: var(--navy-blue);" : "color: white; hover:color: var(--cream-white);"}
        aria-controls="mobile-menu"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <!-- Hamburger Icon -->
        <svg class="hamburger-icon block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
        <!-- Close Icon -->
        <svg class="close-icon hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="md:hidden hidden fixed inset-0 z-40 overflow-hidden" style="background: white !important; background-color: white !important; background-image: none !important; height: 100%; top: 0;">
    <div class="flex flex-col items-center justify-center h-full px-4 text-center" style="background: white !important;">
      <!-- Mobile Language Switcher -->
      <div class="mobile-language-switcher flex items-center justify-center space-x-3 mb-4">
        <button
          class={`lang-btn font-nav transition-all cursor-pointer ${currentLang === 'de' ? 'border-b border-black font-medium' : 'opacity-70 hover:opacity-100'}`}
          style="color: var(--text-primary); background: none; border: none; padding: 0; font-size: 18px;"
          data-lang="de"
        >
          DE
        </button>
        <span style="color: var(--text-primary); opacity: 0.5; font-size: 14px;">|</span>
        <button
          class={`lang-btn font-nav transition-all cursor-pointer ${currentLang === 'en' ? 'border-b border-black font-medium' : 'opacity-70 hover:opacity-100'}`}
          style="color: var(--text-primary); background: none; border: none; padding: 0; font-size: 18px;"
          data-lang="en"
        >
          EN
        </button>
      </div>

      <!-- Navigation Links -->
      <nav class="flex flex-col space-y-2">
        <a href={currentLang === 'en' ? '/tete-en-lair-salon/en' : '/tete-en-lair-salon/'} class={`mobile-nav-link nav-link font-nav block text-xl py-1.5 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en' : '/tete-en-lair-salon/', true)}`} style="color: var(--text-primary); hover:color: var(--navy-blue);" data-key="home">
          {t.nav.home}
        </a>
        <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/salon' : '/tete-en-lair-salon/salon'} class={`mobile-nav-link nav-link font-nav block text-xl py-1.5 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/salon' : '/tete-en-lair-salon/salon', true)}`} style="color: var(--text-primary); hover:color: var(--navy-blue);" data-key="salon">
          {t.nav.salon}
        </a>
        <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/about' : '/tete-en-lair-salon/about'} class={`mobile-nav-link nav-link font-nav block text-xl py-1.5 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/about' : '/tete-en-lair-salon/about', true)}`} style="color: var(--text-primary); hover:color: var(--navy-blue);" data-key="about">
          {t.nav.about}
        </a>
        <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/pricing' : '/tete-en-lair-salon/pricing'} class={`mobile-nav-link nav-link font-nav block text-xl py-1.5 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/pricing' : '/tete-en-lair-salon/pricing', true)}`} style="color: var(--text-primary); hover:color: var(--navy-blue);" data-key="pricing">
          {t.nav.pricing}
        </a>
        <a href={currentLang === 'en' ? '/tete-en-lair-salon/en/contact' : '/tete-en-lair-salon/contact'} class={`mobile-nav-link nav-link font-nav block text-xl py-1.5 transition-all ${getActiveClass(currentLang === 'en' ? '/tete-en-lair-salon/en/contact' : '/tete-en-lair-salon/contact', true)}`} style="color: var(--text-primary); hover:color: var(--navy-blue);" data-key="contact">
          {t.nav.contact}
        </a>
      </nav>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerIcon = mobileMenuBtn?.querySelector('.hamburger-icon');
  const closeIcon = mobileMenuBtn?.querySelector('.close-icon');

  mobileMenuBtn?.addEventListener('click', () => {
    const isExpanded = mobileMenuBtn.getAttribute('aria-expanded') === 'true';
    
    mobileMenuBtn.setAttribute('aria-expanded', (!isExpanded).toString());
    mobileMenu?.classList.toggle('hidden');
    hamburgerIcon?.classList.toggle('hidden');
    hamburgerIcon?.classList.toggle('block');
    closeIcon?.classList.toggle('hidden');
    closeIcon?.classList.toggle('block');
    
    // Prevent body scrolling when menu is open
    if (!isExpanded) {
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      document.body.style.width = '100%';
    } else {
      document.body.style.overflow = '';
      document.body.style.position = '';
      document.body.style.width = '';
    }
  });

  // Close mobile menu when clicking on nav links
  const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      mobileMenuBtn?.setAttribute('aria-expanded', 'false');
      hamburgerIcon?.classList.add('block');
      hamburgerIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      closeIcon?.classList.remove('block');
      
      // Re-enable body scrolling
      document.body.style.overflow = '';
      document.body.style.position = '';
      document.body.style.width = '';
    });
  });

  // Language switching functionality
  const langButtons = document.querySelectorAll('.lang-btn');

  langButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const selectedLang = btn.getAttribute('data-lang');
      const currentPath = window.location.pathname;

      // Extract the page name from the current path
      let pageName = '';
      if (currentPath.includes('/salon')) pageName = '/salon';
      else if (currentPath.includes('/about')) pageName = '/about';
      else if (currentPath.includes('/pricing')) pageName = '/pricing';
      else if (currentPath.includes('/contact')) pageName = '/contact';

      // Navigate to the appropriate page
      if (selectedLang === 'en') {
        window.location.href = '/tete-en-lair-salon/en' + pageName;
      } else {
        window.location.href = '/tete-en-lair-salon' + pageName;
      }
    });
  });

  // Scroll-based navigation hiding
  const mainNav = document.getElementById('main-nav');
  let lastScrollTop = 0;
  let scrollThreshold = 100; // Minimum scroll distance before hiding

  function handleScroll() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    // Don't hide navigation at the very top of the page
    if (scrollTop <= scrollThreshold) {
      mainNav?.classList.remove('nav-hidden');
      return;
    }

    // Hide when scrolling down, show when scrolling up
    if (scrollTop > lastScrollTop && scrollTop > scrollThreshold) {
      // Scrolling down - hide navigation
      mainNav?.classList.add('nav-hidden');
    } else if (scrollTop < lastScrollTop) {
      // Scrolling up - show navigation
      mainNav?.classList.remove('nav-hidden');
    }

    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // For Mobile or negative scrolling
  }

  // Throttle scroll events for better performance
  let ticking = false;
  function requestTick() {
    if (!ticking) {
      requestAnimationFrame(handleScroll);
      ticking = true;
    }
  }

  function onScroll() {
    ticking = false;
    requestTick();
  }

  // Add scroll listener
  window.addEventListener('scroll', onScroll);
</script>